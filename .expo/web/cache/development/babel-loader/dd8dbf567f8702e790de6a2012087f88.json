{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/brunofialho/Desktop/Orkut/components/login/index.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { InputArea, H1, Container, Button, InputBox, Input, LoginTextButton, Label, Img, HeaderName, ButoonImage } from \"./loginStyle\";\nimport { Icon } from \"react-native-elements\";\nimport { PostLogin } from \"../../api/api\";\nimport { GlobalContext } from \"../../context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(GlobalContext),\n      token = _React$useContext.token,\n      setToken = _React$useContext.setToken,\n      setUser = _React$useContext.setUser;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      password = _React$useState2[0],\n      setPassword = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      email = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setErro = _React$useState6[1];\n\n  function storeData(key, value) {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"valor nao gravado\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  var handleLogin = function handleLogin() {\n    if (password && email) {\n      var user = {\n        email: email,\n        password: password\n      };\n      PostLogin(user, setToken, setErro, setUser);\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  React.useEffect(function () {\n    if (token) {\n      storeData(\"token\", token);\n      navigation.navigate(\"Home\");\n    }\n  }, [handleLogin]);\n  return React.createElement(TouchableWithoutFeedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(InputArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderName, {\n    source: require(\"../../assets/images/orkut.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(Img, {\n    source: require(\"../../assets/images/orkut2.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"user\",\n    type: \"font-awesome\",\n    size: 25,\n    color: \"rgb(125,33,132)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    keyboardType: \"email-address\",\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"lock\",\n    type: \"font-awesome\",\n    size: 25,\n    color: \"rgb(125,33,132)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    onPress: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(ButoonImage, {\n    source: require(\"../../assets/images/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Label, {\n    style: {\n      marginTop: 12,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Esqueceu a senha ? \", error && error)))));\n}","map":{"version":3,"sources":["/Users/brunofialho/Desktop/Orkut/components/login/index.jsx"],"names":["React","InputArea","H1","Container","Button","InputBox","Input","LoginTextButton","Label","Img","HeaderName","ButoonImage","Icon","PostLogin","GlobalContext","AsyncStorage","Login","navigation","useContext","token","setToken","setUser","useState","password","setPassword","email","setEmail","error","setErro","storeData","key","value","setItem","console","log","handleLogin","user","useEffect","navigate","require","text","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Keyboard,\n  TouchableWithoutFeedback,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  InputArea,\n  H1,\n  Container,\n  Button,\n  InputBox,\n  Input,\n  LoginTextButton,\n  Label,\n  Img,\n  HeaderName,\n  ButoonImage\n} from \"./loginStyle\";\nimport { Icon } from \"react-native-elements\";\nimport { PostLogin } from \"../../api/api\";\nimport { GlobalContext } from \"../../context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport default function Login({ navigation }) {\n  const { token, setToken, setUser } = React.useContext(GlobalContext);\n  const [password, setPassword] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [error, setErro] = React.useState(\"\");\n  async function storeData(key, value) {\n    try {\n      await AsyncStorage.setItem(key, value);\n    } catch (e) {\n      console.log(\"valor nao gravado\");\n    }\n  }\n\n  const handleLogin = () => {\n    if (password && email) {\n      let user = {\n        email,\n        password,\n      };\n      PostLogin(user, setToken, setErro, setUser);\n    }\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  React.useEffect(() => {\n    if (token) {\n      storeData(\"token\", token);\n      navigation.navigate(\"Home\");\n    }\n  }, [handleLogin]);\n\n\n  return (\n    <TouchableWithoutFeedback>\n      <Container>\n        <InputArea>\n          \n          <HeaderName\n          source={require('../../assets/images/orkut.png')}\n          />\n            <Img\n            source={require('../../assets/images/orkut2.png')}\n            />\n\n\n          <InputBox>\n          <Icon\n            name='user'\n            type=\"font-awesome\"\n            size= {25}\n            color='rgb(125,33,132)'\n            />\n            <Input\n              keyboardType=\"email-address\"\n              placeholder=\"Email\"\n              textContentType=\"emailAddress\"\n              value={email}\n              onChangeText={(text) => setEmail(text)}\n            />\n          </InputBox>\n          <InputBox>\n          <Icon\n            name='lock'\n            type=\"font-awesome\"\n            size= {25}\n            color='rgb(125,33,132)'\n            />\n            <Input\n              placeholder=\"Password\"\n              secureTextEntry={true}\n              textContentType=\"password\"\n              value={password}\n              onChangeText={(text) => setPassword(text)}\n            />\n          </InputBox>\n\n          <Button onPress={handleLogin}>\n            <ButoonImage\n            source={require('../../assets/images/logo.png')}\n            />\n          </Button>\n\n          <TouchableOpacity>\n            <Label style={{ marginTop: 12, textAlign: \"center\" }}>\n              Esqueceu a senha ? {error && error}\n            </Label>\n          </TouchableOpacity>\n        </InputArea>\n      </Container>\n    </TouchableWithoutFeedback>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}