{"ast":null,"code":"var Api_Base = \"http:localhost:3333/\";\nexport var checkToken = function checkToken(token, navigation, setUser) {\n  fetch(Api_Base + \"checkToken\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token\n    }\n  }).then(function (data) {\n    getUser(setUser, token, navigation);\n    navigation.navigate(\"Home\");\n  }).catch(function () {\n    return navigation.navigate(\"Login\");\n  });\n};\nexport var PostLogin = function PostLogin(user, setToken, setError, setUser, navigation) {\n  var adress = Api_Base;\n  fetch(adress, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(function (data) {\n    return data.json();\n  }).then(function (data) {\n    if (data.token) {\n      getUser(setUser, data.token, navigation);\n      setToken(data.token);\n    }\n  }).catch(function () {\n    return setError(\"login invalid\");\n  });\n};\nexport var getUser = function getUser(setUser, token, navigation) {\n  var adress = Api_Base + \"home\";\n  fetch(adress, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token\n    }\n  }).then(function (data) {\n    return data.json();\n  }).then(function (json) {\n    if (json) console.log(json);\n    return setUser(json);\n  }).catch(function (err) {\n    console.log(err);\n    navigation.navigate('Login');\n  });\n};","map":{"version":3,"sources":["/Users/brunofialho/Desktop/Orkut/api/api.js"],"names":["Api_Base","checkToken","token","navigation","setUser","fetch","method","headers","Accept","then","data","getUser","navigate","catch","PostLogin","user","setToken","setError","adress","body","JSON","stringify","json","console","log","err"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,sBAAjB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EAAgC;AACxDC,EAAAA,KAAK,CAAIL,QAAJ,iBAA0B;AAC7BM,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGP,wBAAkBN;AAHX;AAFoB,GAA1B,CAAL,CAQGO,IARH,CAQQ,UAACC,IAAD,EAAU;AACdC,IAAAA,OAAO,CAACP,OAAD,EAAUF,KAAV,EAAiBC,UAAjB,CAAP;AACAA,IAAAA,UAAU,CAACS,QAAX,CAAoB,MAApB;AACD,GAXH,EAYGC,KAZH,CAYS;AAAA,WAAMV,UAAU,CAACS,QAAX,CAAoB,OAApB,CAAN;AAAA,GAZT;AAaD,CAdM;AAgBP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,EAA2Bb,OAA3B,EAAoCD,UAApC,EAAmD;AAC1E,MAAMe,MAAM,GAAGlB,QAAf;AAEAK,EAAAA,KAAK,CAACa,MAAD,EAAS;AACZZ,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFG;AAMZW,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AANM,GAAT,CAAL,CAQGN,IARH,CAQQ,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACY,IAAL,EAAV;AAAA,GARR,EASGb,IATH,CASQ,UAACC,IAAD,EAAU;AACd,QAAIA,IAAI,CAACR,KAAT,EAAgB;AACdS,MAAAA,OAAO,CAACP,OAAD,EAAUM,IAAI,CAACR,KAAf,EAAsBC,UAAtB,CAAP;AACAa,MAAAA,QAAQ,CAACN,IAAI,CAACR,KAAN,CAAR;AACD;AACF,GAdH,EAeGW,KAfH,CAeS;AAAA,WAAMI,QAAQ,CAAC,eAAD,CAAd;AAAA,GAfT;AAgBD,CAnBM;AAqBP,OAAO,IAAMN,OAAO,GAAG,SAAVA,OAAU,CAACP,OAAD,EAAUF,KAAV,EAAiBC,UAAjB,EAAgC;AACrD,MAAMe,MAAM,GAAMlB,QAAN,SAAZ;AACAK,EAAAA,KAAK,CAACa,MAAD,EAAS;AACZZ,IAAAA,MAAM,EAAE,KADI;AAEZC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGP,wBAAkBN;AAHX;AAFG,GAAT,CAAL,CAQGO,IARH,CAQQ,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACY,IAAL,EAAV;AAAA,GARR,EASGb,IATH,CASQ,UAACa,IAAD,EAAU;AACd,QAAIA,IAAJ,EAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACV,WAAOlB,OAAO,CAACkB,IAAD,CAAd;AACD,GAZH,EAcGT,KAdH,CAcS,UAACY,GAAD,EAAS;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAtB,IAAAA,UAAU,CAACS,QAAX,CAAoB,OAApB;AAED,GAlBH;AAmBD,CArBM","sourcesContent":["const Api_Base = \"http:localhost:3333/\";\n\nexport const checkToken = (token, navigation, setUser) => {\n  fetch(`${Api_Base}checkToken`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n  })\n    .then((data) => {\n      getUser(setUser, token, navigation);\n      navigation.navigate(\"Home\");\n    })\n    .catch(() => navigation.navigate(\"Login\"));\n};\n\nexport const PostLogin = (user, setToken, setError, setUser, navigation) => {\n  const adress = Api_Base;\n\n  fetch(adress, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((data) => data.json())\n    .then((data) => {\n      if (data.token) {\n        getUser(setUser, data.token, navigation);\n        setToken(data.token);\n      }\n    })\n    .catch(() => setError(\"login invalid\"));\n};\n\nexport const getUser = (setUser, token, navigation) => {\n  const adress = `${Api_Base}home`;\n  fetch(adress, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n  })\n    .then((data) => data.json())\n    .then((json) => {\n      if (json) console.log(json);\n      return setUser(json);\n    })\n\n    .catch((err) => {\n      console.log(err)\n      navigation.navigate('Login');\n      \n    });\n};\n"]},"metadata":{},"sourceType":"module"}